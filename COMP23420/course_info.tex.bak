\section*{Introduction}

The development of software systems is a challenging process. Customers expect
reliable and easy to use software to be developed within a set budget and to a
tight deadline. As we come to depend upon software in so many aspects of our
lives its increasing size and complexity, together with more demanding users,
means the consequences of failure are increasingly severe. Experience from
nearly 40 years of software engineering has shown that programming ('cutting
code') is only one of a range of activities necessary for the creation of
software systems that meet customer needs. The rest of the time is spent on:
planning and acquiring resources for the project; investigating the business
and technical contexts for the system; eliciting and documenting user
requirements; creating a design for the system; and integrating, verifying and
deploying the completed components.

This course unit builds on the programming skills you have gained in the first
year, to provide you with an understanding of the major challenges inherent in
real-scale software development, and with some of the tools and techniques
that can be used in their attainment.

Since software engineering is a subject best learned hands-on, this is a
project-based module that involves less traditional lecturing than usual.
Instead, relevant skills will be acquired during fortnightly two-hour
workshops, supported by a weekly one hour lecture. The understanding gained
will be practiced through individual and team project assessments.

\section*{Aims}

This unit aims to give students an introduction to the principles and practice
of analysis, design and implementation in object orientated software
engineering. Through experience of building a significant software system in a
team, students will further their? experience and understanding of the
problems that arise in building such a system. They will develop the
analytical, critical and modelling skills that are required by a successful
software engineer.
