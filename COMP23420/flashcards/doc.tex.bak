\documentclass[frontgrid]{flacards}
\usepackage{color}
\usepackage{tabularx}

\definecolor{light-gray}{gray}{0.75}

\newcommand{\frontcard}[1]{\textcolor{light-gray}{\colorbox{light-gray}{$#1$}}}
\newcommand{\backcard}[1]{#1} 

\newcommand{\flashcard}[1]{% create new command for cards with blanks
    \card{% call the original \card command with twice the same argument (#1)
        \let\blank\frontcard% but let \blank behave like \frontcard the first time
        #1
    }{%
        \let\blank\backcard% and like \backcard the second time
        #1
    }%
}

\begin{document}

\pagesetup{1}{4} 

\input{content.tex}

\card{
	What is a behavioural model?
}{
	A behavioural model describes what must happen in the system. They are often
	used to \textbf{describe the functionality of the system}. Include activity
	diagrams, interaction diagrams and use case diagrams.
}

\card{
	What is a structural model?
}{
	Describes what components are present in the system being modelled, and are
	therefore structural models are used when documenting the architecture of
	the system.
}

\card{
	What is an interaction diagram? Give an example of one.
}{
	A type of behavioural model, it emphasises the flow of data through the
	system. A sequence diagram is a type of interaction diagram.
}

\card{
	What is a system class diagram?
}{
	A diagram that describes the classes in a system, their attributes, methods
	and the relationships between them. A type of structural diagram. 
}

\card{
	What is a domain class diagram?
}{
	A diagram that describes the classes in a system, their attributes and the
	relationships between them. Unlike a system class diagram, it doesn't have
	methods. It's a type of structural diagram.
}

\card{
	What is a domain class?
}{
	Each box in a domain/system class diagram is a domain class. It is a self
	contained component in the system, with its own name, attributes, methods
	and relations to other domain classes.
}

\card{
	What is the difference between a domain model and a system model?
}{
	A domain model maps to real life entities (classes), while a system model
	maps to actual programmable classes. You don't have user interfaces in the
	domain model, but you do in the system model.
}

\card{
	What does a sequence diagram show?
}{
	How classes interact with each other and in what order these interactions
	occur. It is a type of interaction diagram. System classes go along the top,
	and interactions go horizontally bewteen vertical lines below them.
}

\card{
	What is an activity diagram?
}{
	An activity diagram decribes what the system should do, not how it does it.
	Basically a flowchart of what the system should do.
}

\card{
	What is an action?
}{
	A non-decomposable piece of behaviuour.
}

\card{
	What is an activity?
}{
	A composed set of actions. We only use activities in activity diagrams.
}

\card{
	What is a non-functional requirement?
}{
	A creteria that is used to judge the operation of a system rather than
	specific behaviours.
}

\card{
	What is a functional requirement?
}{
	A specific behaviour or function that the system should implement. Often 
	described as a set of inputs, the behaviour and outputs.
}

\card{
	What is an actor?
}{
	An actor specifies a role played by a user or any other system that
	interacts with this system. Actors interact with use cases.
}

\card{
	What is a use case?
}{
	A list of steps, defining interactions between an actor and the system to
	achieve a goal. Use cases can have multiple actors, but always have a main
	actor.
}

\card{
	What does WIMPS stand for?
}{
	Windows, Icons, Menues, Pulldowns, Selection
}

\card{
	What are the different styles of user interaction?
}{
	\begin{tabular}{l}
	Wizard interface\\
	Form fill in\\
	Direct manipulation (e.g. word, photoshop)\\
	Command line\\
	Batch processing (e.g. cron)
	\end{tabular}
}

\end{document} 