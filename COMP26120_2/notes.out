\BOOKMARK [1][-]{section.1}{Keys and total orders}{}% 1
\BOOKMARK [1][-]{section.2}{Trees}{}% 2
\BOOKMARK [2][-]{subsection.2.1}{Definition}{section.2}% 3
\BOOKMARK [2][-]{subsection.2.2}{Tree algorithms}{section.2}% 4
\BOOKMARK [3][-]{subsubsection.2.2.1}{Depth of a node}{subsection.2.2}% 5
\BOOKMARK [2][-]{subsection.2.3}{Height of a tree}{section.2}% 6
\BOOKMARK [3][-]{subsubsection.2.3.1}{Tree traversal}{subsection.2.3}% 7
\BOOKMARK [2][-]{subsection.2.4}{Tree datastructures}{section.2}% 8
\BOOKMARK [3][-]{subsubsection.2.4.1}{Using a vector based datastructure for trees}{subsection.2.4}% 9
\BOOKMARK [3][-]{subsubsection.2.4.2}{Using linked nodes to form a tree datastructure}{subsection.2.4}% 10
\BOOKMARK [1][-]{section.3}{Priority Queues}{}% 11
\BOOKMARK [2][-]{subsection.3.1}{Heaps}{section.3}% 12
\BOOKMARK [3][-]{subsubsection.3.1.1}{Insertion}{subsection.3.1}% 13
\BOOKMARK [3][-]{subsubsection.3.1.2}{Removal}{subsection.3.1}% 14
\BOOKMARK [3][-]{subsubsection.3.1.3}{Heap sort}{subsection.3.1}% 15
\BOOKMARK [1][-]{section.4}{Dictionaries and Hash Tables}{}% 16
\BOOKMARK [2][-]{subsection.4.1}{Collision handling}{section.4}% 17
\BOOKMARK [3][-]{subsubsection.4.1.1}{Probing}{subsection.4.1}% 18
